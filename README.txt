CompilerConstruction

ðŸš€ README: Asquared Programming Language
Version: 1.0
Made by: Abdur Raheem (22i-0777) and Afrah Syed (22i-1008)
ðŸ“Œ Introduction
Asquared is a simple, structured, and easy-to-learn programming language designed for basic computations, input/output operations, and variable management.

This guide will walk you through:
âœ” Keywords & their meanings
âœ” Syntax rules
âœ” How to write and execute a Asquared program

ðŸ”¹ 1. Reserved Keywords
Asquared includes the following reserved keywords that must not be used as identifiers:

Keyword	Purpose
grab	Takes user input
shout	Displays output
numba	Defines an integer variable
floatie	Defines a decimal variable
chary	Defines a character variable
nocap	Defines a true boolean variable
cap	Represents false in boolean values
constg	Defines a global constant
constl	Defines a local constant
ðŸ”¹ 2. Data Types
Asquared supports four primary data types:

Type	Keyword	Example
Integer	numba	numba age = 25;
Float	floatie	floatie pi = 3.14;
Character	chary	chary letter = 'A';
Boolean	bool	bool isRaining = cap;
âœ” Booleans use cap (false) and nocap (true).

ðŸ”¹ 3. Constants
Constants are immutable variables and must be initialized at the time of declaration.

constg numba maxusers = 100;
constl floatie taxrate = 0.05;
âœ” constg â†’ Global constant
âœ” constl â†’ Local constant

ðŸ”¹ 4. Input & Output
âœ… Taking input using grab
numba age;
grab (age);

âœ… Printing output using shout
shout ("Your age is: ", age);
âœ” The shout statement must be followed by parentheses ().

ðŸ”¹ 5. Operators
Supports arithmetic, assignment, and comparison operators.

ðŸ”¹ Arithmetic Operators
Operator	Meaning	Example
+	Addition	numba sum = a + b;
-	Subtraction	numba diff = a - b;
*	Multiplication	numba product = a * b;
/	Division	floatie result = a / b;
%	Modulus	numba remainder = a % b;
^       Power   numba pow = a^b;

ðŸ”¹ Assignment Operators
Operator	Meaning	Example
=	Assign value	numba x = 10;

ðŸ”¹ 7. Comments
âœ” Single-line comments â†’ Start with ~
âœ” Multi-line comments â†’ Enclosed between #** ... **#
~ This is a single-line comment
#**
This is a 
multi-line comment
**#

ðŸ”¹ 8. String Handling
âœ” Strings are enclosed in double quotes " ".
âœ” Example:
shout ("Hello, World!");

ðŸ”¹ 9. Scope & Code Structure
âœ” The entire program must be enclosed within {}.
âœ” Example:
{
    numba a = 10;
    numba b = 20;
    numba sum = a + b;
    
}

ðŸš€ How to Use: 
âœ… Writing a Program
Create a file with .aa extension (e.g., program.aa).
Write your code inside it.

ðŸ“Œ Summary
âœ” YPL supports: Variables, Constants, Input/Output, Arithmetic Operations.
âœ” Programs must be enclosed in {}.
âœ” Comments: ~ for single-line, #** **# for multi-line.
âœ” Errors must be fixed for successful execution.

From square one to squared upâ€”happy coding with AÂ²! ðŸ”¥ðŸš€
